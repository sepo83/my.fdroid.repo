#!/bin/sh

echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ show configuratione
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo "Store:    $APKEEP_STORE"
echo "Username: $APKEEP_USERNAME"
echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ APKEEP: Download and rename apks
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mkdir $FDROID_DIR/.apk_tmp

if [ "$APKEEP_STORE" = "google-play" ]; then
  if [ -z $APKEEP_USERNAME ] || [ -z $APKEEP_PASSWORD ]; then
    echo "ERROR: 'google-play' was selected as APKEEP_STORE, thus APKEEP_USERNAME (=$APKEEP_USERNAME) or APKEEP_PASSWORD (=$APKEEP_PASSWORD) shall not be empty! Aborting..."
  fi
  apkeep_storestr="-d $APKEEP_STORE -u '$APKEEP_USERNAME' -p $APKEEP_PASSWORD"

else
  apkeep_storestr="-d $APKEEP_STORE"
fi

apkeep --csv $FDROID_DIR/apk_list.txt $FDROID_DIR/.apk_tmp $apkeep_storestr

echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ APK: Convert xapk to apk, if feasble (currently disabled)
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo
#for apk_file in "$FDROID_DIR"/.apk_tmp/*.xapk 
#do
#  if [ -f "$apk_file" ];then
#    apk_file_name="$(basename $apk_file)"
#    echo "Processing '$apk_file_name'..."
#    unzip -o -j $apk_file "${apk_file_name%.*}.apk" -d $FDROID_DIR/.apk_tmp
#    rm $apk_file
#  fi
#done

echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ APK: rename apks and copy to fdroid repo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo
for apk_file in "$FDROID_DIR"/.apk_tmp/*.apk 
do
  if [ -f "$apk_file" ];then
    apk_file_name="$(basename $apk_file)"
    echo "Processing '$apk_file_name'..."

    if [ ${apk_file_name##*.} != 'apk' ]; then 
      echo "...not an *.apk file. Skipping!"
      continue
    fi

    versionname="$(aapt dump badging "$apk_file" | grep "versionName" | sed -e "s/.*versionName='//" -e "s/' .*//")"
    filename="${apk_file_name%.*}-v$versionname.apk"
    echo "...renaming to $filename"

    if [ -f "$FDROID_DIR/repo/$filename" ]; then
      echo "...already exists in repo. Skipping!"
    else
      echo "...copy to repo"
      mv $apk_file $FDROID_DIR/repo/$filename
    fi
  fi
done

rm -r $FDROID_DIR/.apk_tmp

echo
echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ GPLAYCLI: Cleanup apks not in apk_list.txt
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
find $FDROID_DIR/repo -type f -name '*.apk' $(awk -F\# '$1!=""{printf(" -not -name %s*",$0)}' ORS=' ' $FDROID_DIR/apk_list.txt)
find $FDROID_DIR/repo -type f -name '*.apk' $(awk -F\# '$1!=""{printf(" -not -name %s*",$0)}' ORS=' ' $FDROID_DIR/apk_list.txt) -delete
echo
echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ FDROID: Update Repo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cd $FDROID_DIR
fdroid update -c --use-date-from-apk
echo
echo
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo ~~ FDROID: Sync repo to network
echo ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fdroid deploy -v
cd -
